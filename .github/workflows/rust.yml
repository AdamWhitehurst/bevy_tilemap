name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        #         os: [windows-2019, ubuntu-20.04, macos-10.15]
        os: [midgardhr, yggdrasil]
    runs-on: ${{ matrix.os }}
    #      needs: clean
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
#      - uses: actions/cache@v2
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-check-test-stable-${{ hashFiles('**/Cargo.lock') }}
# Note: These are my own runners, it has all prerequisites already.
#      - name: Install prerequisites
#        run: sudo apt-get install --no-install-recommends libasound2-dev libudev-dev python
#        if: ${{ runner.os == 'Linux' }}
      - name: Check
        run: cargo check
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"
      - name: Check format
        run: cargo +nightly fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::type_complexity
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

#   clean:
#     runs-on: self-hosted
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           components: rustfmt, clippy
#           override: true
#       - name: Install alsa
#         run: sudo apt-get install --no-install-recommends libasound2-dex
#       - name: Install udev
#         run: sudo apt-get install --no-install-recommends libudev-dev
#       - name: Check format
#         run: cargo +nightly fmt --all -- --check
#       - name: Run clippy
#         run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::type_complexity -A clippy::manual-strip
